%include 'in_out.asm'
SECTION .data
msg db "Результат: ",0
msg2 db "Функция: f(x)=5(2+x)",0
SECTION .text
global _start
_start:
    pop ecx           ; Извлекаем из стека в `ecx` количество аргументов (первое значение в стеке)
    pop edx           ; Извлекаем из стека в `edx` имя программы (второе значение в стеке)
    sub ecx, 1        ; Уменьшаем `ecx` на 1 (количество аргументов без названия программы)
    mov esi, 0        ; Используем `esi` для хранения промежуточных сумм
next:
    cmp ecx, 0        ; Проверяем, есть ли еще аргументы
    jz _end           ; Если аргументов нет, выходим из цикла (переход на метку `_end`)
    pop eax           ; Извлекаем следующий аргумент из стека
    call atoi         ; Преобразуем символ в число
    ; Применяем новую формулу f(x) = 5(2 + x)
    call _calcul
    add esi, eax      ; Добавляем к промежуточной сумме результат: `esi = esi + eax`
    loop next         ; Переход к обработке следующего аргумента
_end:
    mov eax, msg2      ; Вывод сообщения "Функция: f(x)=5(2+x)"
    call sprintLF
    mov eax, msg       ; Вывод сообщения "Результат: "
    call sprint
    mov eax, esi       ; Записываем сумму в регистр `eax`
    call iprintLF      ; Печать результата
    call quit          ; Завершение программы
_calcul:
add eax, 2
mov ebx, 5
mul ebx
ret
